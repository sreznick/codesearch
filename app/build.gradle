/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'antlr'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.antlr:antlr4-runtime:4.7.2'

    antlr "org.antlr:antlr4:4.7.2" // use ANTLR version 4

    implementation 'org.apache.lucene:lucene-core:10.0.0'
    implementation 'org.apache.lucene:lucene-queryparser:10.0.0'
    implementation 'org.apache.lucene:lucene-analysis-common:10.0.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.json:json:20210307'
    implementation 'com.beust:jcommander:1.82'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.codesearch.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += [ "-visitor", 
                   "-long-messages",
                   "-package", "org.codesearch" ]
    outputDirectory = new File(buildDir.toString() + "/generated-src/antlr/main/org/codesearch/")
}
